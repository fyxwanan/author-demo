{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["ObjectList","id","name","App","props","_this","Object","classCallCheck","this","_super","call","getBoxIds","linkIds","forEach","item","index","top","document","getElementById","concat","push","key","offsetTop","getBoundingClientRect","setState","scrollToAnchor","anchorName","anchorElement","scrollIntoView","block","behavior","state","b","time","language","arguments","length","undefined","console","log","now","Date","getTime","userAgent","navigator","last","parse","replace","indexOf","subtract","write","yearC","monthC","day","weekC","dayC","hour","hourC","minute","minC","t","split","yy","mm","dd","hh","mmm","parseInt","dateToTimestamp","_this2","scrollRef","scrollTop","classList","add","k","v","remove","_this3","contentOptions","LinkOptions","_react_16_13_1_react_default","a","createElement","className","onClick","bind","style","width","height","border","onScrollCapture","onScrollEvent","overflowY","ref","c","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2b5f8d3c.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport './App.css';\r\n\r\nconst ObjectList =\r\n    [{id: 1, name: '橘子'},\r\n    {id: 2, name: '苹果'},\r\n    {id: 3, name: '香蕉'},\r\n    {id: 4, name: '菠萝'}];\r\n\r\n\r\n    // 时间戳\r\nfunction dateToTimestamp (time, language = 'zh_CN') {\r\n\tconsole.log('a ===>')\r\n  // 刚刚、几分钟前、几小时前、几天前、几周前、（超一周后且当年）月日-时分、年月日-时分\r\n  const now = new Date().getTime();\r\n  const { userAgent } = navigator;\r\n  // const last = new Date(knowledgeInfo.lastUpdateDate).getTime();\r\n  let last = '';\r\n  if ('msSaveOrOpenBlob' in navigator) { // 判断是ie的浏览器，调用ie文件下载的方法\r\n    if (time) {\r\n      last = new Date(Date.parse(time.replace(/-/g, '/')));\r\n    }\r\n  } else if (userAgent.indexOf('Safari') > -1) {\r\n    if (time) {\r\n      last = new Date(Date.parse(time.replace(/-/g, '/')));\r\n    }\r\n  } else {\r\n    last = new Date(time).getTime();\r\n  }\r\n  // const subtract = (now - last) / (1000 * 60 * 60);  // 这是时间差毫小时\r\n  const subtract = (now - last); // 这是时间差毫小时\r\n  document.write('userAgent ===>' + userAgent);\r\n  document.write('<br>');\r\n  document.write('time ===>' + time);\r\n  document.write('<br>');\r\n  document.write('last ===>' + last);\r\n  document.write('<br>');\r\n  document.write('now ===>' + now);\r\n  document.write('<br>');\r\n  document.write('subtract ===>' + subtract);\r\n  document.write('<br>');\r\n\r\n  const minute = 1000 * 60;\r\n  const hour = minute * 60;\r\n  const day = hour * 24;\r\n  const halfamonth = day * 15;\r\n  const month = day * 30;\r\n\r\n  const yearC = subtract / (month * 12);\r\n  const monthC = subtract / month;\r\n  const weekC = subtract / (7 * day);\r\n  const dayC = subtract / day;\r\n  const hourC = subtract / hour;\r\n  const minC = subtract / minute;\r\n\r\n  const t = time.split(' ');\r\n  const yy = t[0].split('-')[0];\r\n  const mm = t[0].split('-')[1];\r\n  const dd = t[0].split('-')[2];\r\n  const hh = t[1].split(':')[0];\r\n  const mmm = t[1].split(':')[1];\r\n  if (language === 'zh_CN') {\r\n    if (yearC >= 1) {\r\n      // return KnowledgeSearchStore.language['create.year.before'].replace('${}', parseInt(yearC, 10));\r\n      return `${yy}-${mm}-${dd} ${hh}:${mmm}`; // 年月日-时分\r\n    } if (monthC >= 1) {\r\n      return `${mm}-${dd} ${hh}:${mmm}`; // 当年的 月日-时分\r\n    } if (weekC >= 1) {\r\n      return `${parseInt(weekC, 10)}周前`; // 几周\r\n    } if (dayC >= 1) {\r\n      return `${parseInt(dayC, 10)}天前`; // 几天\r\n    } if (hourC >= 1) {\r\n      return `${parseInt(hourC, 10)}小时前`; // 小时\r\n    } if (minC >= 1) {\r\n      return `${parseInt(minC, 10)}分钟前`; // 分钟\r\n    }\r\n    return '刚刚';\r\n  } else {\r\n    if (yearC >= 1) {\r\n      // return KnowledgeSearchStore.language['create.year.before'].replace('${}', parseInt(yearC, 10));\r\n      return `${yy}-${mm}-${dd} ${hh}:${mmm}`; // 年月日-时分\r\n    } if (monthC >= 1) {\r\n      return `${mm}-${dd} ${hh}:${mmm}`; // 当年的 月日-时分\r\n    } if (weekC >= 1) {\r\n      return `${parseInt(weekC, 10)} week ago`; // 几周\r\n    } if (dayC >= 1) {\r\n      return `${parseInt(dayC, 10)} days ago`; // 几天\r\n    } if (hourC >= 1) {\r\n      return `${parseInt(hourC, 10)} hours ago`; // 小时\r\n    } if (minC >= 1) {\r\n      return `${parseInt(minC, 10)} minutes ago`; // 分钟\r\n    }\r\n    return 'just';\r\n  }\r\n};\r\n\r\nclass App extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.getBoxIds();\r\n        const b = dateToTimestamp('2020-05-22 18:16:51');\r\n        console.log('b ===>', b)\r\n        document.write(b);\r\n    }\r\n\r\n    /**\r\n     *  1. 在React生命周期函数中执行函数\r\n     *  2. 获取每个块的正文内容初始距离浏览器边框的距离 offsetTop\r\n     */\r\n    getBoxIds = () => {\r\n        // 正文板块绑定的id数组\r\n        const linkIds = [];\r\n        ObjectList.forEach((item, index) => {\r\n            const top = document.getElementById(`${item.id}`);\r\n            if (top) {\r\n                linkIds.push({ key: item.id, offsetTop: top.getBoundingClientRect().top});\r\n            }\r\n        })\r\n        this.setState({ linkIds });\r\n    };\r\n\r\n\r\n    // 这是滚动方法\r\n    scrollToAnchor = (anchorName) => {\r\n        if (anchorName || anchorName === 0) {\r\n            // 找到锚点\r\n            const anchorElement = document.getElementById(anchorName);\r\n            // 如果对应id的锚点存在，就跳转到锚点\r\n            if (anchorElement) {\r\n                anchorElement.scrollIntoView({\r\n                    block: 'start',\r\n                    behavior: 'smooth',\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     *  activeLink   -- 高亮的类名，属性在css中自行设置\r\n     *  linkIds    --  锚点对应div id集合的数组\r\n     *  this.scrollRef.scrollTop  滚动条滚动的距离\r\n     */\r\n    onScrollEvent() {\r\n        const { linkIds } = this.state;\r\n        linkIds.forEach((item, index) => {\r\n            if (this.scrollRef.scrollTop > item.offsetTop) {\r\n                document.getElementById(`link-${item.key}`).classList.add('activeLink');\r\n                linkIds.forEach((k, v) => {\r\n                    if (item.key !== k.key) {\r\n                        document.getElementById(`link-${k.key}`).classList.remove('activeLink');\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n  render() {\r\n      const contentOptions = [];\r\n      const LinkOptions = [];\r\n      ObjectList.forEach((item) => {\r\n          LinkOptions.push(<div id={`link-${item.id}`} className=\"link-content\" onClick={this.scrollToAnchor.bind(this, item.id)}>{item.name}</div>)\r\n          contentOptions.push(\r\n              <div className=\"content-child\">\r\n                  <span id={`${item.id}`}>{item.name}</span>\r\n                  <div style={{ width: '100%', height: 500, border: 'solid 1px red' }}>\r\n                      我是内容，我是内容\r\n                  </div>\r\n              </div>\r\n          )\r\n      });\r\n\r\n      return (\r\n          <div className=\"App\">\r\n              <div\r\n                  id=\"know-detail-body\"\r\n                  onScrollCapture={() => this.onScrollEvent()}\r\n                  style={{ height: 1000, overflowY: 'scroll' }}\r\n                  ref={(c) => {\r\n                      this.scrollRef = c;\r\n                  }}\r\n              >\r\n                  <div className=\"content\">\r\n                      <div id=\"content-div\">\r\n                          {contentOptions}\r\n                          <div style={{ width: '100%', height: 500, border: 'solid 1px red' }}>\r\n                            我是其他内容\r\n                            我是评论\r\n                            我是大帅比\r\n                            给个star吧 哈哈\r\n                          </div>\r\n                      </div>\r\n                  </div>\r\n\r\n                  <div className=\"anchor-link-body\" id=\"know-link-anchor\">\r\n                      <div className=\"link-content-link\">\r\n                          <span />\r\n                      </div>\r\n                      <div id=\"link-contentKey\">\r\n                          {LinkOptions}\r\n                      </div>\r\n                  </div>\r\n\r\n              </div>\r\n          </div>\r\n      );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}